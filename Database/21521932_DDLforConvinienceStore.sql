/*
DROP TABLE TAIKHOAN;
DROP TABLE CHITIETHOADON;
DROP TABLE CHITIETKHO;
DROP TABLE HOADON;
DROP TABLE KHACHHANG;
DROP TABLE KHO;
DROP TABLE NHANVIEN;
DROP TABLE SANPHAM;
*/

CREATE  TABLE SANPHAM (
    MaSP NVARCHAR2(30) not null PRIMARY KEY,
    TenSP NVARCHAR2(100) not null,
    GiaSP INT,
    SoLuong INT,
    PhanLoai NVARCHAR2(50),
    NSX DATE,
    HSD DATE,
    MoTa NVARCHAR2(500)
);  

CREATE TABLE NHANVIEN (
    MaNV NVARCHAR2(10) not null PRIMARY KEY,
    TenNV NVARCHAR2(50) not null,
    SDTNV NVARCHAR2(20) not null,
    NgaySinh DATE,
    CCCD NVARCHAR2(20) not null,
    DiaChi NVARCHAR2(200),
    ChucVu NVARCHAR2(50),
    Luong INT,
    NGAYVL DATE
); 

CREATE TABLE KHACHHANG (
    MAKH NVARCHAR2(15) not null PRIMARY KEY,
    SDTKH NVARCHAR2(20) not null,
    TenKH NVARCHAR2(50) not null,
    NgayDK DATE
);   

CREATE TABLE HOADON (
    MaHD NVARCHAR2(10) not null PRIMARY KEY,
    NgayMua DATE not null,
    MaNV NVARCHAR2(10) not null,
    MAKH NVARCHAR2(20), 
    HinhThuc NVARCHAR2(50),
    TriGia INT,
    CONSTRAINT fk_NV_HD FOREIGN KEY (MaNV) REFERENCES NHANVIEN (MaNV),
    CONSTRAINT fk_KH_HD FOREIGN KEY (MAKH) REFERENCES KHACHHANG (MAKH)
);

CREATE TABLE KHO (
    MaLoHang NVARCHAR2(10) not null PRIMARY KEY,
    MaNV NVARCHAR2 (10) not null,
    NgayNhap DATE,
    TenNhaCungCap NVARCHAR2 (100),
    CONSTRAINT fk_NV_K FOREIGN KEY (MaNV) REFERENCES NHANVIEN (MaNV)
);

CREATE TABLE TAIKHOAN (
    username NVARCHAR2 (20) not null PRIMARY KEY,
    password varchar(50) not null,
    MaNV NVARCHAR2 (10) not null,
    CONSTRAINT fk_TK_HD FOREIGN KEY (MaNV) REFERENCES NHANVIEN (MaNV)
);

CREATE TABLE CHITIETKHO (
    MaLoHang NVARCHAR2(10) not null,
    MaSP NVARCHAR2(30) not null,
    SoLuong INT,
    PRIMARY KEY (MaLoHang, MaSP),
    CONSTRAINT fk_LH_CTK FOREIGN KEY (MaLoHang) REFERENCES KHO (MaLoHang),
    CONSTRAINT fk_SP_CTK FOREIGN KEY (MaSP) REFERENCES SANPHAM (MaSP)
);

CREATE TABLE CHITIETHOADON (
    MaHD NVARCHAR2(10) not null,
    MaSP NVARCHAR2(30) not null,
    SoLuong INT,
    Gia INT,
    PRIMARY KEY (MaHD, MaSP),
    CONSTRAINT fk_HD_CTHD FOREIGN KEY (MaHD) REFERENCES HOADON (MaHD),
    CONSTRAINT fk_SP_CTHD FOREIGN KEY (MaSP) REFERENCES SANPHAM (MaSP)
);
 
/
-- TRIGGER LUONG CUA NHANVIEN
CREATE OR REPLACE TRIGGER Trg_NGS_NGVL_LUONG_NV
BEFORE INSERT OR UPDATE ON NHANVIEN
FOR EACH ROW
DECLARE
BEGIN
IF(:NEW.LUONG > 20000000 AND :NEW.CHUCVU = 'nhan vien') THEN RAISE_APPLICATION_ERROR(-20000, 'Luong cua nhan vien khong duoc lon hon 20 trieu'); END IF;
IF(:NEW.NGAYSINH > :NEW.NGAYVL) THEN RAISE_APPLICATION_ERROR(-20000, 'Ngay sinh cua nhan vien phai < ngay vao lam'); END IF;
END;
/
-- TRIGGER SOLUONG TK PHAI BE HON SL NHANVIEN
CREATE OR REPLACE TRIGGER Trg_KTRA_SLTK
BEFORE INSERT ON TAIKHOAN
FOR EACH ROW
DECLARE
SLTK INT;
SLNV INT;
BEGIN
SELECT COUNT(USERNAME) INTO SLTK FROM TAIKHOAN;
SELECT COUNT(MANV) INTO SLNV FROM NHANVIEN;
IF(SLTK > SLNV) THEN RAISE_APPLICATION_ERROR(-20000, 'So Luong tai khoan phai be hon so luong nhan vien'); END IF;
END;
 /
-- TRIGGER AH BANG SANPHAM
CREATE OR REPLACE TRIGGER Trg_KTRA_SL_GIA_SANPHAM
BEFORE INSERT OR UPDATE ON SANPHAM
FOR EACH ROW 
BEGIN 
    IF(INSERTING AND :NEW.SOLUONG != 0) THEN RAISE_APPLICATION_ERROR(-20000,  'SO LUONG SAN PHAM phai = 0, VUI LONG NHAP LAI');
    ELSIF(UPDATING AND :NEW.SOLUONG < 0 ) THEN RAISE_APPLICATION_ERROR(-20000,  'SO LUONG SAN PHAM khong duoc < 0, VUI LONG NHAP LAI');
    END IF;
    IF :NEW.GIASP <  1 THEN RAISE_APPLICATION_ERROR(-20000, 'GIA SAN PHAM KHONG DUOC < 1');
    END IF;
END;
/
-- TRIGGER AH BANG SANPHAM, CHITIETKHO
CREATE OR REPLACE TRIGGER Trg_AUTO_TANG_GIAM_SL_SANPHAM_NHAPKHO
AFTER INSERT OR UPDATE OR DELETE ON CHITIETKHO
FOR EACH ROW
DECLARE
    SLSP SANPHAM.SOLUONG%TYPE;
    TONG SANPHAM.SOLUONG%TYPE;
BEGIN
    IF(:NEW.SOLUONG < 1) THEN RAISE_APPLICATION_ERROR(-20000,  'SO LUONG SAN PHAM < 1, VUI LONG NHAP LAI');
    END IF; 
    IF INSERTING THEN 
        SELECT SOLUONG INTO SLSP FROM SANPHAM WHERE :NEW.MASP = SANPHAM.MASP;  
        UPDATE SANPHAM SET SOLUONG = SLSP + :NEW.SOLUONG WHERE :NEW.MASP = SANPHAM.MASP; 
    ELSIF UPDATING THEN 
        SELECT SOLUONG INTO SLSP FROM SANPHAM WHERE :NEW.MASP = SANPHAM.MASP;  
        TONG := SLSP - :OLD.SOLUONG;
        TONG := TONG + :NEW.SOLUONG;
        UPDATE SANPHAM SET SOLUONG = TONG WHERE  :NEW.MASP = MASP;   
    ELSIF DELETING THEN   
        SELECT SOLUONG INTO SLSP FROM SANPHAM WHERE :OLD.MASP = SANPHAM.MASP;  
        UPDATE SANPHAM SET SOLUONG = SLSP - :OLD.SOLUONG WHERE  :OLD.MASP = MASP; 
    END IF;
END;
/
-- TRIGGER AH BANG SANPHAM, HOADON, CHITIETHOADON 
CREATE OR REPLACE TRIGGER Trg_AUTO_GIAM_SL_SANPHAM_TINHGIA_TRIGIA_HD
BEFORE INSERT ON CHITIETHOADON
FOR EACH ROW
DECLARE
    SLSPBD SANPHAM.SOLUONG%TYPE; 
    GIA_MASP SANPHAM.GIASP%TYPE; 
    TG HOADON.TRIGIA%TYPE;
BEGIN
    SELECT SOLUONG, GIASP INTO SLSPBD, GIA_MASP FROM SANPHAM WHERE :NEW.MASP = SANPHAM.MASP; 
    SELECT TRIGIA INTO TG FROM HOADON WHERE HOADON.MAHD = :NEW.MAHD; 
    
    UPDATE SANPHAM SET SOLUONG = SLSPBD - :NEW.SOLUONG WHERE :NEW.MASP = SANPHAM.MASP;  
    
    :NEW.GIA := :NEW.SOLUONG * GIA_MASP;
    UPDATE HOADON SET TRIGIA = TG + :NEW.GIA WHERE :NEW.MAHD = HOADON.MAHD;
END;
/
-- TRIGGER AH BANG NHANVIEN, HOADON
CREATE OR REPLACE TRIGGER KTRA_NGHD_NGVL_NV
BEFORE INSERT  ON HOADON
FOR EACH ROW
DECLARE
    NGAYVLAM DATE;
    NGDK DATE;
BEGIN
    SELECT NGAYVL INTO NGAYVLAM FROM NHANVIEN WHERE :NEW.MANV = MANV;
    SELECT NGAYDK INTO NGDK FROM KHACHHANG WHERE :NEW.MAKH = MAKH;
    IF(NGAYVLAM > :NEW.NGAYMUA ) THEN  RAISE_APPLICATION_ERROR(-20000, 'TAI SAO NHAN VIEN CO THE NHAP HOA DON TRUOC KHI DI LAM'); END IF;
    IF(NGDK > :NEW.NGAYMUA) THEN RAISE_APPLICATION_ERROR(-20000, 'NGAY MUA PHAI LON HON NGAYDK CUA KHACHHANG '); END IF; 
END;
/
ALTER TRIGGER KTRA_NGHD_NGVL_NV DISABLE;
/
-- PROCEDURE 1
CREATE OR REPLACE PROCEDURE INSERT_SANPHAM(  MA IN SANPHAM.MASP%TYPE,
                                            TEN IN SANPHAM.TENSP%TYPE, 
                                            GIA IN SANPHAM.GIASP%TYPE,
                                            SL IN SANPHAM.SOLUONG%TYPE,
                                            PL IN SANPHAM.PHANLOAI%TYPE,
                                            NSX IN SANPHAM.NSX%TYPE,
                                            HSD IN SANPHAM.HSD%TYPE,
                                            MT IN SANPHAM.MOTA%TYPE  )
IS
BEGIN
    INSERT INTO SANPHAM VALUES(MA, TEN, GIA, SL, PL, NSX, HSD, MT); 
END;
/
-- PROCEDURE 2
CREATE OR REPLACE PROCEDURE UPDATE_SANPHAM(  MA IN SANPHAM.MASP%TYPE,
                                            TEN IN SANPHAM.TENSP%TYPE, 
                                            GIA IN SANPHAM.GIASP%TYPE,
                                            SL IN SANPHAM.SOLUONG%TYPE,
                                            PL IN SANPHAM.PHANLOAI%TYPE,
                                            NSXUAT IN SANPHAM.NSX%TYPE, 
                                            HSDUNG IN SANPHAM.HSD%TYPE,
                                            MT IN SANPHAM.MOTA%TYPE)
IS 
BEGIN
    UPDATE SANPHAM SET TENSP = TEN , GIASP = GIA , SOLUONG = SL , PHANLOAI = PL , HSD = HSDUNG , MOTA = MT, NSX = NSXUAT  WHERE MASP = MA; 
END;
/
-- PROCEDURE 3
CREATE OR REPLACE PROCEDURE DELETE_SANPHAM(MA IN SANPHAM.MASP%TYPE)
IS 
BEGIN
    DELETE FROM SANPHAM WHERE MASP = MA;
END; 
/
-- PROCEDURE 4
CREATE OR REPLACE PROCEDURE SEARCH_SANPHAM(TEXT_SEARCH IN  NVARCHAR2,
                                           DSSP OUT SYS_REFCURSOR)
IS 
BEGIN
    OPEN DSSP FOR SELECT MASP, TENSP, GIASP, SOLUONG, PHANLOAI, NSX, HSD, MOTA FROM SANPHAM 
    WHERE LOWER(MASP) LIKE '%' || LOWER(TEXT_SEARCH) || '%'
    OR LOWER(TENSP) LIKE '%' || LOWER(TEXT_SEARCH) || '%'
    OR LOWER(GIASP) LIKE '%' || LOWER(TEXT_SEARCH) || '%'
    OR LOWER(SOLUONG) LIKE '%' || LOWER(TEXT_SEARCH) || '%'
    OR LOWER(PHANLOAI) LIKE '%' || LOWER(TEXT_SEARCH) || '%';
END;
/ 
-- PROCEDURE 5
CREATE OR REPLACE PROCEDURE DOANHTHU(FR_DATE IN DATE, END_DATE IN DATE, TONG OUT NUMBER)
IS
BEGIN
    SELECT SUM(TRIGIA) INTO TONG FROM HOADON WHERE NGAYMUA BETWEEN FR_DATE AND END_DATE;
END;
/
-- VIETBAOCAO            --PROCEDURE 6 THEM KHACH HANG - VIETBAOCAO -- edited
CREATE OR REPLACE PROCEDURE INSERT_KHACHHANG( MA IN KHACHHANG.MAKH%TYPE,
                                            TEN IN KHACHHANG.TENKH%TYPE, 
                                            SDT IN KHACHHANG.SDTKH%TYPE )
IS  
    LUUSDT KHACHHANG.SDTKH%TYPE := 'KHONGTONTAI';
BEGIN 
    BEGIN
    SELECT  SDTKH INTO LUUSDT  FROM KHACHHANG WHERE SDTKH = SDT; 
        EXCEPTION
        WHEN NO_DATA_FOUND THEN   
            INSERT INTO KHACHHANG VALUES(MA, SDT, TEN , SYSDATE); 
    END;
        IF LUUSDT !=  'KHONGTONTAI'   THEN RAISE_APPLICATION_ERROR(-20000, 'SDT KH NAY DA TON TAI');
        END IF;  
END;
/               
 -- VIETBAOCAO            -- PROCEDURE 7
CREATE OR REPLACE PROCEDURE UPDATE_KHACHHANG( MA IN KHACHHANG.MAKH%TYPE,
                                            TEN IN KHACHHANG.TENKH%TYPE, 
                                            SDT IN KHACHHANG.SDTKH%TYPE )
IS 
    KTRA KHACHHANG.SDTKH%TYPE := 'khongtontai'; 
BEGIN 
    BEGIN
    SELECT  SDTKH INTO KTRA FROM KHACHHANG WHERE SDTKH = SDT AND MAKH NOT IN MA; 
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            UPDATE KHACHHANG SET TENKH = TEN , SDTKH = SDT WHERE MAKH = MA;
    END;
    IF(KTRA != 'khongtontai')  THEN  RAISE_APPLICATION_ERROR(-20000, 'SDT KH NAY DA TON TAI');
    END IF;   
END;
/
-- VIETBAOCAO           --PROCEDURE 8
CREATE OR REPLACE PROCEDURE DELETE_KHACHHANG(MA IN KHACHHANG.MAKH%TYPE)
IS 
BEGIN
    DELETE FROM KHACHHANG WHERE MAKH = MA;
END;
/
-- VIETBAOCAO           -- PROCEDURE 9
CREATE OR REPLACE PROCEDURE SEARCH_KHACHHANG(TEXT_SEARCH IN  NVARCHAR2,
                                            DSKH OUT SYS_REFCURSOR)
IS 
BEGIN
    OPEN DSKH FOR SELECT MAKH, TENKH, SDTKH, NGAYDK FROM KHACHHANG 
    WHERE SDTKH LIKE '%' || TEXT_SEARCH || '%' 
    OR LOWER(TENKH) LIKE '%' || LOWER(TEXT_SEARCH) || '%' 
    OR LOWER(MAKH) LIKE '%' || LOWER(TEXT_SEARCH) || '%';
END;
/
-- VIETBAOCAO             -- PROCEDURE TAOHOADON 10
CREATE OR REPLACE PROCEDURE INSERT_HOADON(MHD IN HOADON.MAHD%TYPE,
                                        NGM IN HOADON.NGAYMUA%TYPE,
                                        MNV IN NHANVIEN.MANV%TYPE, 
                                        MKH IN KHACHHANG.MAKH%TYPE,
                                        H_THUC IN HOADON.HINHTHUC%TYPE)
IS  
BEGIN
    INSERT INTO HOADON(MAHD, NGAYMUA, MANV, MAKH, HINHTHUC) VALUES(MHD, SYSDATE, MNV, MKH, H_THUC);  
END;
/
-- PROCEDURE TAOHOADON 11
CREATE OR REPLACE PROCEDURE SEARCH_HOADON(TEXT_SEARCH IN  NVARCHAR2,
                                          DSSP OUT SYS_REFCURSOR)
IS 
BEGIN
    OPEN DSSP FOR SELECT MAHD, MANV, MAKH, TRIGIA, NGAYMUA, HINHTHUC FROM HOADON 
    WHERE LOWER(MAHD) LIKE '%' || LOWER(TEXT_SEARCH) || '%'
    OR LOWER(MANV) LIKE '%' || LOWER(TEXT_SEARCH) || '%'
    OR LOWER(MAKH) LIKE '%' || LOWER(TEXT_SEARCH) || '%'
    OR LOWER(TRIGIA) LIKE '%' || LOWER(TEXT_SEARCH) || '%'
    OR LOWER(NGAYMUA) LIKE '%' || LOWER(TEXT_SEARCH) || '%'
    OR LOWER(HINHTHUC) LIKE '%' || LOWER(TEXT_SEARCH) || '%';
END;
/
-- VIETBAOCAO 2         -- PROCEDURE quan trong 12
CREATE OR REPLACE PROCEDURE INSERT_KHO_LOHANG(MLH IN KHO.MALOHANG%TYPE,
                                            MNV IN NHANVIEN.MANV%TYPE,
                                            TNCC IN KHO.TENNHACUNGCAP%TYPE)
IS
    MNVNLH NHANVIEN.MANV%TYPE := 'TTLH';
BEGIN
    BEGIN
    SELECT MANV INTO MNVNLH FROM KHO WHERE MLH = MALOHANG;
        EXCEPTION
        WHEN NO_DATA_FOUND THEN   
            INSERT INTO KHO VALUES(MLH, MNV, SYSDATE, TNCC);
    END; 
    IF(MNVNLH != 'TTLH') THEN RAISE_APPLICATION_ERROR(-20000, 'Ma lo hang nay da duoc nhap boi nhan vien co ma so: ' ||  MNVNLH); END IF; 
END;
/
-- PROCEDURE 13
CREATE OR REPLACE PROCEDURE UPDATE_LOHANG(  MLH IN KHO.MALOHANG%TYPE,
                                            TNCC IN KHO.TENNHACUNGCAP%TYPE, 
                                            MNV IN NHANVIEN.MANV%TYPE, 
                                            NGN IN KHO.NGAYNHAP%TYPE)
IS 
BEGIN
    UPDATE KHO SET TENNHACUNGCAP = TNCC, MANV = MNV, NGAYNHAP = NGN  WHERE MALOHANG = MLH; 
END;
/
-- PROCEDURE 14
CREATE OR REPLACE PROCEDURE DELETE_LOHANG(  MLH IN KHO.MALOHANG%TYPE )
IS 
BEGIN
    DELETE KHO WHERE MALOHANG = MLH;
END;
/
-- PROCEDURE 15
CREATE OR REPLACE PROCEDURE SEARCH_LOHANG(TEXT_SEARCH IN  NVARCHAR2,
                                          DSSP OUT SYS_REFCURSOR)
IS 
BEGIN
    OPEN DSSP FOR SELECT MALOHANG, MANV, NGAYNHAP, TENNHACUNGCAP FROM KHO 
    WHERE LOWER(MALOHANG) LIKE '%' || LOWER(TEXT_SEARCH) || '%'
    OR LOWER(MANV) LIKE '%' || LOWER(TEXT_SEARCH) || '%'
    OR LOWER(NGAYNHAP) LIKE '%' || LOWER(TEXT_SEARCH) || '%'
    OR LOWER(TENNHACUNGCAP) LIKE '%' || LOWER(TEXT_SEARCH) || '%';
END;
/
-- VIETBAOCAO            --PROCEDURE  16
CREATE OR REPLACE PROCEDURE INSERT_CHITIETKHO(MALH1 IN CHITIETKHO.MALOHANG%TYPE, MASP1 IN SANPHAM.MASP%TYPE, SOLUONG IN CHITIETKHO.SOLUONG%TYPE)
IS 
    CHECK_MLH CHITIETKHO.MALOHANG%TYPE := 'kotontai';
    CHECK_MSP SANPHAM.MASP%TYPE := 'kotontai';
BEGIN
    BEGIN
    SELECT MALOHANG INTO CHECK_MLH FROM KHO WHERE MALOHANG = MALH1;
    SELECT MASP INTO CHECK_MSP FROM SANPHAM WHERE MASP =  MASP1;
    EXCEPTION 
        WHEN NO_DATA_FOUND THEN 
            IF(CHECK_MLH  = 'kotontai') THEN RAISE_APPLICATION_ERROR(-20000, 'MALOHANG BAN NHAP VAO KHONG DUNG');
            ELSIF (CHECK_MSP = 'kotontai') THEN RAISE_APPLICATION_ERROR(-20000, 'MASP BAN NHAP VAO KHONG DUNG');
            END IF; 
    END;
        INSERT INTO CHITIETKHO VALUES(MALH1, MASP1, SOLUONG);
END;
/
-- PROCEDURE 17
CREATE OR REPLACE PROCEDURE UPDATE_CHITIETKHO(MALH IN CHITIETKHO.MALOHANG%TYPE,
                                                MSP IN CHITIETKHO.MASP%TYPE,
                                                SL IN CHITIETKHO.SOLUONG%TYPE )
IS  
BEGIN
    UPDATE CHITIETKHO SET SOLUONG = SL WHERE MALH = MALOHANG AND MSP = MASP;  
END;
/
-- PROCEDURE 18
CREATE OR REPLACE PROCEDURE DELETE_CTK(MLH IN KHO.MALOHANG%TYPE,
                                        MSP IN SANPHAM.MASP%TYPE)
IS
BEGIN
    DELETE CHITIETKHO WHERE MALOHANG = MLH AND MSP = MASP;
END;
/
--PROCEDURE  20
CREATE OR REPLACE PROCEDURE INSERT_NV(MNV IN NHANVIEN.MANV%TYPE,
                                    TEN IN NHANVIEN.TenNV%TYPE, 
                                    SDT IN NHANVIEN.SDTNV%TYPE,
                                    NS IN NHANVIEN.NgaySinh%TYPE,
                                    CCCD IN NHANVIEN.CCCD%TYPE,
                                    DC IN NHANVIEN.DiaChi%TYPE,
                                    CV IN NHANVIEN.ChucVu%TYPE,
                                    L IN NHANVIEN.Luong%TYPE,
                                    NVL IN NHANVIEN.NgayVL%TYPE)
IS
BEGIN
    INSERT INTO NHANVIEN VALUES(MNV, TEN, SDT, NS, CCCD, DC, CV, L, NVL);
END;
/
--PROCEDURE 21
CREATE OR REPLACE PROCEDURE DELETE_NV(MNV IN NHANVIEN.MANV%TYPE )
IS
BEGIN
    DELETE NHANVIEN WHERE MNV = MANV;
END;
/
-- PROCEDURE 22
CREATE OR REPLACE PROCEDURE UPDATE_NV(MNV IN NHANVIEN.MANV%TYPE,
                                    TEN IN NHANVIEN.TenNV%TYPE, 
                                    SDT IN NHANVIEN.SDTNV%TYPE,
                                    NS IN NHANVIEN.NgaySinh%TYPE,
                                    CCCDI IN NHANVIEN.CCCD%TYPE,
                                    DC IN NHANVIEN.DiaChi%TYPE,
                                    CV IN NHANVIEN.ChucVu%TYPE,
                                    L IN NHANVIEN.Luong%TYPE,
                                    NVL IN NHANVIEN.NgayVL%TYPE)
IS
BEGIN
    UPDATE NHANVIEN SET TenNV = TEN, SDTNV = SDT, NgaySinh = NS, CCCD = CCCDI, DiaChi = DC, ChucVu = CV, Luong = L, NgayVL = NVL WHERE MANV = MNV;
END;
/
--PROCEDURE 23 
CREATE OR REPLACE PROCEDURE SEARCH_NHANVIEN(TEXT_SEARCH IN  NVARCHAR2,
                                          DSSP OUT SYS_REFCURSOR)
IS 
BEGIN
    OPEN DSSP FOR SELECT MANV, TENNV, SDTNV, NGAYSINH, CCCD, DIACHI, CHUCVU, LUONG, NGAYVL FROM NHANVIEN 
    WHERE LOWER(MANV) LIKE '%' || LOWER(TEXT_SEARCH) || '%'
    OR LOWER(TENNV) LIKE '%' || LOWER(TEXT_SEARCH) || '%'
    OR LOWER(SDTNV) LIKE '%' || LOWER(TEXT_SEARCH) || '%'
    OR LOWER(NGAYSINH) LIKE '%' || LOWER(TEXT_SEARCH) || '%'
    OR LOWER(CCCD) LIKE '%' || LOWER(TEXT_SEARCH) || '%'
    OR LOWER(DIACHI) LIKE '%' || LOWER(TEXT_SEARCH) || '%'
    OR LOWER(CHUCVU) LIKE '%' || LOWER(TEXT_SEARCH) || '%'
    OR LOWER(LUONG) LIKE '%' || LOWER(TEXT_SEARCH) || '%'
    OR LOWER(NGAYVL) LIKE '%' || LOWER(TEXT_SEARCH) || '%';
END;
/
-- PROCEDURE 24  
CREATE OR REPLACE PROCEDURE INSERT_CHITIETHOADON(MHD IN HOADON.MAHD%TYPE,
                                                MSP IN SANPHAM.MASP%TYPE,
                                                SL IN CHITIETHOADON.SOLUONG%TYPE)
IS  
BEGIN 
        INSERT INTO CHITIETHOADON(MAHD, MASP, SOLUONG) VALUES(MHD, MSP, SL); 
END;
/
-- PROCEDURE 25
CREATE OR REPLACE PROCEDURE SEARCH_CTHD(TEXT_SEARCH IN  NVARCHAR2,
                                        DSCTHD OUT SYS_REFCURSOR)
IS 
BEGIN
    OPEN DSCTHD FOR SELECT MAHD, MASP, SOLUONG, GIA  FROM CHITIETHOADON WHERE MAHD LIKE '%' || TEXT_SEARCH || '%' OR MASP LIKE '%' || TEXT_SEARCH || '%';
END;
/
-- PROCEDURE 26
CREATE OR REPLACE PROCEDURE INSERT_TAIKHOAN(USR IN TAIKHOAN.USERNAME%TYPE,
                                            PASS IN TAIKHOAN.PASSWORD%TYPE,
                                            MNV IN TAIKHOAN.MANV%TYPE)
IS  
BEGIN 
        INSERT INTO TAIKHOAN VALUES(USR, PASS, MNV) ; 
END;
/
-- PROCEDURE 27 
CREATE OR REPLACE PROCEDURE DELETE_TK(MTK IN TAIKHOAN.USERNAME%TYPE )
IS
BEGIN
    DELETE TAIKHOAN WHERE MTK = USERNAME;
END;
/
-- PROCEDURE 28
CREATE OR REPLACE PROCEDURE SEARCH_TK(MTK IN TAIKHOAN.USERNAME%TYPE, DSTK OUT sys_refcursor)
IS
BEGIN
    OPEN DSTK FOR SELECT USERNAME, PASSWORD, MANV  FROM TAIKHOAN WHERE MTK = USERNAME OR MTK = MANV;
END;
/
-- PROCEDURE 29
CREATE OR REPLACE PROCEDURE SLKH_MUAHANG(FR_DATE IN DATE, END_DATE IN DATE, TONG OUT NUMBER)
IS
BEGIN
    SELECT COUNT(DISTINCT MAKH) INTO TONG FROM HOADON WHERE NGAYMUA BETWEEN FR_DATE AND END_DATE;
END;
/
-- PROCEDURE  30
-- VIETBAOCAO         -- PROCEDURE 
CREATE OR REPLACE PROCEDURE TOP10SP_BANCHAY(FR_DATE IN DATE, END_DATE IN DATE, TOP10  OUT SYS_REFCURSOR)
IS
BEGIN 
    OPEN TOP10 
    FOR SELECT SANPHAM.MASP, TENSP, SUM(CHITIETHOADON.SOLUONG) 
        FROM HOADON, CHITIETHOADON, SANPHAM
        WHERE CHITIETHOADON.MAHD = HOADON.MAHD  
        AND SANPHAM.MASP = CHITIETHOADON.MASP
        AND  NgayMua BETWEEN  FR_DATE AND END_DATE
        GROUP BY SANPHAM.MASP, TENSP
        ORDER BY SUM(CHITIETHOADON.SOLUONG) DESC
    FETCH FIRST 10 ROWS ONLY;
    CLOSE TOP10;
END;
/